<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZDMAAAAASUVORK5CYII=
</value>
  </data>
</root>